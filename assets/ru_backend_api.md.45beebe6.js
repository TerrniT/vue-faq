import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.46d06b6e.js";const F=JSON.parse('{"title":"Абстракция канала связи с бэкендом","description":"","frontmatter":{},"headers":[],"relativePath":"ru/backend/api.md","filePath":"ru/backend/api.md","lastUpdated":1702029457000}'),o={name:"ru/backend/api.md"},l=p(`<h1 id="абстракция-канала-связи-с-бэкендом" tabindex="-1">Абстракция канала связи с бэкендом <a class="header-anchor" href="#абстракция-канала-связи-с-бэкендом" aria-label="Permalink to &quot;Абстракция канала связи с бэкендом&quot;">​</a></h1><h2 id="api-сервис" tabindex="-1">API сервис <a class="header-anchor" href="#api-сервис" aria-label="Permalink to &quot;API сервис&quot;">​</a></h2><p>Для осуществления вызовов на бэк удобно выделить код, связанный с транспортным уровнем (формирование и отправка запроса) в отдельный js модуль.</p><p>Тогда в вашем компоненте доступ к вашему бэкенду будет выглядеть примерно так:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { api } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@/services/api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// loading.value = true;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">userData</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> api.users.</span><span style="color:#B392F0;">getUserData</span><span style="color:#E1E4E8;">({ userId });</span></span>
<span class="line"><span style="color:#6A737D;">// loading.value = false;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { api } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@/services/api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// loading.value = true;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">userData</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> api.users.</span><span style="color:#6F42C1;">getUserData</span><span style="color:#24292E;">({ userId });</span></span>
<span class="line"><span style="color:#6A737D;">// loading.value = false;</span></span></code></pre></div><p>Вся сложность связи с бэкендом спрятана в модуль <code>api</code>.</p><p>Пример <code>api.js</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> auth </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./auth&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> users </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./users&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> utils </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> products </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./products&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { authInterceptor, notificationInterceptor } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./interceptors&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> http </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./http&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useAuth } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@/user-account/composables/useAuth&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">api</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  products,</span></span>
<span class="line"><span style="color:#E1E4E8;">  auth,</span></span>
<span class="line"><span style="color:#E1E4E8;">  users,</span></span>
<span class="line"><span style="color:#E1E4E8;">  utils,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#B392F0;">setBaseUrl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#E1E4E8;">.env.</span><span style="color:#79B8FF;">VITE_API_URL</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// to set token into every request</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#B392F0;">setTokenCallback</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">useAuth</span><span style="color:#E1E4E8;">().getToken);</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#B392F0;">setLogoutCallback</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">useAuth</span><span style="color:#E1E4E8;">().logout);</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#B392F0;">addResponseInterceptor</span><span style="color:#E1E4E8;">(notificationInterceptor);</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#B392F0;">addResponseInterceptor</span><span style="color:#E1E4E8;">(authInterceptor);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { api };</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> api;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> auth </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./auth&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> users </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./users&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> utils </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> products </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./products&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { authInterceptor, notificationInterceptor } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./interceptors&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> http </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./http&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { useAuth } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@/user-account/composables/useAuth&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">api</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  products,</span></span>
<span class="line"><span style="color:#24292E;">  auth,</span></span>
<span class="line"><span style="color:#24292E;">  users,</span></span>
<span class="line"><span style="color:#24292E;">  utils,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#6F42C1;">setBaseUrl</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">import</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">meta</span><span style="color:#24292E;">.env.</span><span style="color:#005CC5;">VITE_API_URL</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// to set token into every request</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#6F42C1;">setTokenCallback</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">useAuth</span><span style="color:#24292E;">().getToken);</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#6F42C1;">setLogoutCallback</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">useAuth</span><span style="color:#24292E;">().logout);</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#6F42C1;">addResponseInterceptor</span><span style="color:#24292E;">(notificationInterceptor);</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#6F42C1;">addResponseInterceptor</span><span style="color:#24292E;">(authInterceptor);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { api };</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> api;</span></span></code></pre></div><p>Пример <code>users.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> http </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./http&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">users</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getUserData</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> http.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/api/users/user&quot;</span><span style="color:#E1E4E8;">, params);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> http </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./http&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">users</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getUserData</span><span style="color:#24292E;">(</span><span style="color:#E36209;">params</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> http.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/api/users/user&quot;</span><span style="color:#24292E;">, params);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p><code>http.js</code> - обертка вокруг запросов на сервер через вашу любимую библиотеку.</p><p>Чем удобно абстрагирование кода связи с бэкендом от основного кода приложения в отдельный сервис?</p><p>Можно легко заменить <code>axios</code> на <code>fetch</code> или <code>XHR</code>, <code>REST</code> на <code>JSON-RPC</code> или <code>WebSockets</code>. Код в компонентах не меняется и остается простым и явным.</p>`,13),e=[l];function t(c,r,E,y,i,u){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
