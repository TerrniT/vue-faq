import{_ as e,o as t,c as i,R as a}from"./chunks/framework.W9JL_T3t.js";const u=JSON.parse('{"title":"Implementation details","description":"","frontmatter":{"head":[["meta",{"name":"og:site_name","content":"Vue webapp"}],["meta",{"name":"og:image","content":"/images/vue-webapp-logo.png"}],["meta",{"name":"twitter:image","content":"/images/vue-webapp-logo.png"}]]},"headers":[],"relativePath":"en/vue-webapp/options/description.md","filePath":"en/vue-webapp/options/description.md","lastUpdated":1702541074000}'),n={name:"en/vue-webapp/options/description.md"},o=a('<h1 id="implementation-details" tabindex="-1">Implementation details <a class="header-anchor" href="#implementation-details" aria-label="Permalink to &quot;Implementation details&quot;">​</a></h1><h2 id="code-injection-in-index-html" tabindex="-1">Code injection in index.html <a class="header-anchor" href="#code-injection-in-index-html" aria-label="Permalink to &quot;Code injection in index.html&quot;">​</a></h2><p>To avoid bloating <code>index.html</code> injections of code fragments into it (Open graph, Google analytics, Splash screen, Service worker) are done via <a href="https://github.com/altrusl/vite-plugin-html-injection/" target="_blank" rel="noreferrer">vite-plugin-html-injection</a> Vite plugin.</p><p>The code snippets themselves are located in the <code>./src/utils/injections/</code> directory. The plugin configuration file <code>injection-config.ts</code> is also located there.</p><h2 id="css-tricks" tabindex="-1">CSS tricks <a class="header-anchor" href="#css-tricks" aria-label="Permalink to &quot;CSS tricks&quot;">​</a></h2><p>A hack is applied in the application on large resolutions to prevent screen jumping when the main scrollbar appears/disappears</p><p>``css html { overflow-x: hidden; margin-right: calc(-1 * (100vw - 100%)) }</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span></code></pre></div>',8),s=[o];function c(p,l,r,d,h,m){return t(),i("div",null,s)}const _=e(n,[["render",c]]);export{u as __pageData,_ as default};
