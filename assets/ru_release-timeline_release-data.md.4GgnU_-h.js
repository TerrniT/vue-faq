import{_ as e,c as a,o as t,U as i}from"./chunks/framework.P5TqXf0g.js";const h=JSON.parse('{"title":"Данные релизов и пул риквестов","description":"","frontmatter":{"pageClass":"release-timeline","head":[["meta",{"name":"og:site_name","content":"Release timeline - visual component displaying GitHub release timeline"}],["meta",{"name":"og:image","content":"/images/vue-faq-logo.png"}],["meta",{"name":"twitter:image","content":"/images/vue-faq-logo.png"}]]},"headers":[],"relativePath":"ru/release-timeline/release-data.md","filePath":"ru/release-timeline/release-data.md","lastUpdated":1706601612000}'),l={name:"ru/release-timeline/release-data.md"},n=i('<h1 id="данные-релизов-и-пул-риквестов" tabindex="-1">Данные релизов и пул риквестов <a class="header-anchor" href="#данные-релизов-и-пул-риквестов" aria-label="Permalink to &quot;Данные релизов и пул риквестов&quot;">​</a></h1><h2 id="получение-данных" tabindex="-1">Получение данных <a class="header-anchor" href="#получение-данных" aria-label="Permalink to &quot;Получение данных&quot;">​</a></h2><p>Есть три варианта получения данных с релизами с GitHub-а</p><ol><li>Динамическое. Прямой запрос к GitHub REST API во время открытия страницы.</li><li>Запрос к GitHub REST API через прокси</li><li>Запрос к GitHub REST API во время билда проекта, оптимизация и сохранение данных локально на сайте.</li></ol><p>На данный момент реализован только 1. вариант.</p><p>Второй вариант нужен для уменьшения размера загружаемого файла.</p><p>Третий вариант так же может оптимизировать потоки данных, но делает снэпшот релизов и рул риквестов на определенный момент времени. При выходе нового релиза потребуется пересобрать документацию.</p>',7),o=[n];function s(r,m,_,c,d,p){return t(),a("div",null,o)}const g=e(l,[["render",s]]);export{h as __pageData,g as default};
