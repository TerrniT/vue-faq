import{_ as a,o as l,c as t,R as e}from"./chunks/framework.WpHw1xpL.js";const m=JSON.parse('{"title":"Онлайн маркетплейс","description":"","frontmatter":{"pageClass":"arty-crafty"},"headers":[],"relativePath":"ru/arty-crafty/about-project.md","filePath":"ru/arty-crafty/about-project.md","lastUpdated":1704136635000}'),i={name:"ru/arty-crafty/about-project.md"},r=e('<h1 id="онлаин-маркетплеис" tabindex="-1">Онлайн маркетплейс <a class="header-anchor" href="#онлаин-маркетплеис" aria-label="Permalink to &quot;Онлайн маркетплейс&quot;">​</a></h1><h2 id="цели-данного-проекта" tabindex="-1">Цели данного проекта: <a class="header-anchor" href="#цели-данного-проекта" aria-label="Permalink to &quot;Цели данного проекта:&quot;">​</a></h2><ol><li>Постепенное построение продукта: начиная с витрины с простым статичным бэкендом в форме json файлов и заканчивая полноценным маркетплейсом со сторонним headless e-commerce решением.</li><li>При разработке должны использоваться последние проверенные достижения Vue.js экосистемы и лучшие практики в разработке программного обеспечения.</li><li>Проект должен быть примером грамотной реализации проекта, начиная с архитектуры и заканчивая кодом.</li><li>Программная система должна быть удобна для использования, кастомизации и развертывания для человека, не знакомого с Vue, - то есть, представлять из себя продукт для конечного пользователя.</li></ol><h2 id="нефункциональные-требования-software-quality-attributes" tabindex="-1">Нефункциональные требования (software quality attributes) <a class="header-anchor" href="#нефункциональные-требования-software-quality-attributes" aria-label="Permalink to &quot;Нефункциональные требования (software quality attributes)&quot;">​</a></h2><ol><li>Высокий UX</li><li>Производительность</li><li>Безопасность</li><li>Функциональность</li><li>Расширяемость</li><li>Понятный задокументированный чистый код, использование лучших практик</li></ol><h2 id="общие-функциональные-требования" tabindex="-1">Общие функциональные требования <a class="header-anchor" href="#общие-функциональные-требования" aria-label="Permalink to &quot;Общие функциональные требования&quot;">​</a></h2><ol><li>PWA</li><li>Глубоко настраиваемые темы. Как общие, так и для каждого магазина маркетплейса.</li><li>i18n (интернационализация)</li></ol><h2 id="этапы-развития-приложения-приблизительно" tabindex="-1">Этапы развития приложения (приблизительно) <a class="header-anchor" href="#этапы-развития-приложения-приблизительно" aria-label="Permalink to &quot;Этапы развития приложения (приблизительно)&quot;">​</a></h2><ol><li>Витрина (показ каталога категорий и товаров из них)</li><li>Бэкенд и база данных</li><li>Поиск по товарам, маркетплейс (отдельные магазины)</li><li>UI/UX</li><li>Интеграция с E-commerce headless решением</li><li>Аутентификация и авторизация</li><li>Корзина для покупок, оформление заказов, личный кабинет покупателя</li><li>Добавление различного функционала: методы оплаты, доставки, рейтинги товаров, отзывы покупателей, customer service</li><li>SEO оптимизация</li><li>Административная панель для магазинов маркетплейса</li></ol><p>Разработка будет вестись постепенно, по этапам, описанным выше. После каждого этапа должно получаться рабочее приложение. Разбиение большой задачи на небольшие подзадачи и всего процесса стадии сильно упрощает управление проектом и повышает вероятность итогового положительного исхода.</p>',10),o=[r];function s(c,n,h,u,d,_){return l(),t("div",null,o)}const b=a(i,[["render",s]]);export{m as __pageData,b as default};
