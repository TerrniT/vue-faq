import{_ as e,o as t,c as a,Q as i}from"./chunks/framework.254bf437.js";const b=JSON.parse('{"title":"Цели","description":"","frontmatter":{"head":[["meta",{"name":"og:site_name","content":"vue-webapp"}],["meta",{"name":"og:image","content":"/images/vue-webapp.jpg"}],["meta",{"name":"twitter:image","content":"/images/vue-webapp.jpg"}]]},"headers":[],"relativePath":"vue-webapp/objectives.md","filePath":"vue-webapp/objectives.md"}'),l={name:"vue-webapp/objectives.md"},o=i('<h1 id="цели" tabindex="-1">Цели <a class="header-anchor" href="#цели" aria-label="Permalink to &quot;Цели&quot;">​</a></h1><ol><li>Создание конструктора каркаса простого сразу работающего SPA приложения под конкретную задачу за пару минут, с возможностью его дальнейшей стилизации и наполнения контентом.</li><li>Тонкая кастомизация его с помощью небольших функциональных блоков кода.</li><li>Сбор и обобщение лучших техник и практик при создании современного реактивного фронтенда.</li><li>Дать возможность начинающим разработчикам на готовых примерах ознакомиться с экосистемой Vue.js, изучить лучшие практики фронтенда и Vue 3 от построения архитектуры приложения до наименования CSS классов.</li><li>Дать возможность опытным разработчикам быстро и эффективно создавать каркас готового веб приложения и использовать переиспользуемые блоки кода (boilerplate), особенно такие, которые не могут быть распространяемы как NPM пакеты.</li></ol><p>Данное приложение должно выполнять роль конструктора каркаса вебсайта, с возможностью выбора при создании:</p><ul><li>Глобального бизнес-шаблона сайта (портфолио, блог, онлайн-магазин и.т.д)</li><li>Варианта общего лэйаута вебприложения</li><li>Вариантов конкретных компонент (header, footer, sidebar и т.д.)</li><li>Варианта общего стиля/дизайна</li><li>Отдельного функционала, инжектируемого как функциональные фрагменты (API модуль, i18n, PWA, splash screen, auth модуль, themes и т.д. )</li><li>Возможности подключения/интеграции при желании распространенных библиотек (в том числе UI)</li><li>Возможности интеграции c определенными headless CRM и иными бэкенд API сервисами</li></ul><hr><div class="tip custom-block"><p class="custom-block-title">Замечание 1</p><p>Подключение определенной функциональности, например i18n, означает не просто добавление этой библиотеки в <code>package.json</code>, а полноценную минимальную работающую интеграцию - создание соответствующей composable функции, нескольких локалей, и применение t() в шаблоне для иллюстрации с необходимыми комментариями в коде для облегчения последующего использования и кастомизации.</p></div><div class="tip custom-block"><p class="custom-block-title">Замечание 2</p><p>Подключение определенной функциональности, использующей стороннюю библиотеку (например, тоастер или модальное окно), делается через обёртку, чтобы потом разработчику при желании было легко поменять сам конкретный пакет, реализующий данный функционал.</p></div>',7),s=[o];function c(p,n,r,_,m,d){return t(),a("div",null,s)}const h=e(l,[["render",c]]);export{b as __pageData,h as default};
